@using CompozeData.Models
@{
    Document document = ViewBag.ThisDocument;
    ProjectListViewModel model = ViewBag.ProjectListModel;
    bool oneNote = ViewBag.OneNoteOnly;
    ViewData["Title"] = document.DocumentName;
}

<div class="background-l-grey stack-sm row mt-2 stack-sm">
    <div class="col-7 pt-1 border-round background-lighter dashboard-box">
        <div class="row center-x">
            <a class="m-auto ml-3 mt-1" href="/UserInfo/Project/@document.ProjectId">Back to Project</a>
            <form class="no-form-style row center-y" id="wordcount-form">
                <label class="h-30" for="word-goal">Word Goal:</label>
                <input class="h-30" type="number" id="word-goal" name="word-goal" />
                <input class="h-40" type="submit" value="âœ“" id="wordcount-submit"/>
            </form>
        </div>
        <h2 contenteditable="true" class="center-x" id="title-header">@ViewData["Title"]</h2>
        <div class="p-0 stack">
            <form id="document-form" class="w-100 m-0 border-none p-0" asp-controller="UserInfo" asp-action="EditDocument" method="post">
                <div class="stack">
                    <input type="hidden" value="@document.DocumentId" name="documentId"/>
                    <input type="hidden" value="@document.ProjectId" name="projectId"/>
                    <input type="hidden" value="@document.DocumentName" name="documentName" id="documentName"/>
                    <input type="hidden" value="@document.DocumentContent" name="documentContent" id="documentContent"/>
                    <input type="hidden" value="@document.DocumentCategory" name="documentCategory"/>
                    <div contenteditable="true" class="txt-font-basic text-editor" id="text-editor">@document.DocumentContent</div>
                </div>
                <input type="submit" value="Save" class="mt-2 mb-1" />
            </form>
            <button class="fancybutton" onclick="openModal('template-modal')">Create Template</button>
            <div class="button-red px-2 mx-5" onclick="openModal('del-modal')">Delete</div>
            <p>@ViewBag.EditedMessage</p>
            @if(document.DocumentContent != null && document.DocumentContent != "") {
                <p>Characters: @document.DocumentContent.Length</p>
                <p>Words: @document.DocumentContent.Split(" ").Length</p>
            }
            <p class="hide" id="word-goal-display">Word Goal: </p>
        </div>
    </div>
    <div class="stack col-5">
        <h2>Notes</h2>
        @* @if(!oneNote)
        { *@
            <div class="border-round background-lighter center-x w-90 p-1 pr-2 h-auto stack">
                <form id="create-note-form" class="no-form-style w-90 m-1 h-150" asp-controller="UserInfo" asp-action="CreateNote" method="post">
                    <input type="hidden" value="@document.DocumentId" name="documentId" />
                    <input type="hidden" value="" name="documentContent" id="create-docContent" />
                    <input type="textarea" class="border-none mb-1 mh-20 background-l-grey" name="newNote" />
                </form>
                <div class="fancybutton h-40" id="create-note-submit">+ New Note</div>
            </div>
            @for(int i = 0; i < document.DocumentNotes.Count; i++) 
            {
                <div class="border-round background-lighter center-x w-90 p-1 pr-2 h-auto">
                    <form id="update-note-form-@i" class="no-form-style w-90 m-1 h-150" asp-controller="UserInfo" asp-action="UpdateNote" method="post">
                        <input type="hidden" value="@document.DocumentId" name="documentId" />
                        <input type="hidden" value="" name="documentContent" id="update-docContent-@i" />
                        <input type="hidden" name="originalNote" value="@document.DocumentNotes[i]" />
                        <input type="textarea" class="border-none mb-1 mh-20 background-l-grey" value="@document.DocumentNotes[i]" name="updatedNote" />
                    </form>
                    <div class="fancybutton h-40 update-note-submit" id="submit-@i">Update Note</div>
                </div>
            }
        @* } *@
        
    </div>
</div>

<div id="template-modal" class="modal m-middle">
    <div class="modal-content">
        <span class="x-button close" onclick="closeModal('del-modal')">X</span>
        <h3 class="border-bottom">Create Template</h3>
        <p>Please enter more details about this template. Make sure to save your document first.</p>
        <form asp-controller="UserInfo" asp-action="CreateTemplate" method="post">
            <input type="hidden" value="@document.DocumentId" name="documentId"/>
            <label for="templateName">Name: </label>
            <input type="text" value="" name="templateName" />
            <label for="templateCategory">Category: </label>
            <input type="text" value="" name="templateCategory" />
            <input type="hidden" value="@document.DocumentContent" name="templateContent" />
            <input type="submit" value="Create" />
        </form>
        <button class="fancybutton" onclick="closeModal('template-modal')">Cancel</button>
        </div>
    </div>
</div>

<div id="del-modal" class="modal m-middle">
    <div class="modal-content">
        <span class="x-button close" onclick="closeModal('del-modal')">X</span>
        <h3 class="border-bottom">Delete</h3>
        <p>Are you sure you want to delete this document?</p>
        <div class="row">
            <form class="border-none no-form-style" asp-controller="UserInfo" asp-action="DeleteDocument" method="post">
                <input type="hidden" value="@document.DocumentId" name="docId"/>
                <input type="submit" value="Yes" />
            </form>
            <button class="fancybutton" onclick="closeModal('del-modal')">Cancel</button>
        </div>
    </div>
</div>

<div id="search" class="modal noblackout">
    <div class="modal-content">
        <span class="close button-x" id="close-search">X</span>
        <div class="row">
            <label for="search-input">Search: </label>
            <input type="text" id="search-input" />
        </div>
    </div>
</div>

<script>
    let keysPressedHere = {};

    let contentDiv = document.getElementById('text-editor');
    let originalContent = contentDiv.innerHTML;
    let wordGoal = 0;

    document.getElementById('close-search').addEventListener('click', (evt) => {
        contentDiv.innerHTML = originalContent;
        document.getElementById('search').style.display = 'none';
    });

    const updateWordGoal = () => {
        document.getElementById('word-goal-display').innerHTML = `Word Goal: ${wordGoal}`;
        document.getElementById('word-goal-display').style.display = 'block';
    }

    document.getElementById('wordcount-submit').addEventListener('click', evt => {
        evt.preventDefault();
        let wordVal = document.getElementById('word-goal').value;
        if(wordVal > 0 && wordVal > contentDiv.innerHTML.length) {
            wordGoal = wordVal;
            updateWordGoal();
        }
    });

    window.onclick = function(event) {
        if (event.target.id == 'search') {
            event.target.style.display = 'none';
            contentDiv.innerHTML = originalContent; 
        }
    }

    document.addEventListener('keydown', (event) => {
        keysPressedHere[event.key] = true;

        if (keysPressedHere['Control'] && event.key == 's') {
            document.getElementById("document-form").submit();
            keysPressedHere['Control'] = false;
        }

        if (keysPressedHere['Control'] && event.key == 't') {
            openModal('template-modal');
            keysPressedHere['Control'] = false;
        }

        if (keysPressedHere['Control'] && event.key == 'f') {
            originalContent = contentDiv.innerHTML;
            document.getElementById('search').style.display = 'block';
            keysPressedHere['Control'] = false;
        }
    });

    document.addEventListener('keyup', (event) => {
        keysPressedHere[event.key] = false;
    });

    document.getElementById('search-input').addEventListener('input', (evt) => {
        const reg = new RegExp(document.getElementById('search-input').value, 'g');
        contentDiv.innerHTML = originalContent.replace(reg, `<span class="highlight">${document.getElementById('search-input').value}</span>`);
    });

    contentDiv.addEventListener('input', (evt) => {
        document.getElementById('documentContent').value = contentDiv.innerHTML;
    });

    document.getElementById('title-header').addEventListener('keyup', (evt) => {
        if (evt.key != 'Tab' && evt.key != 'Enter') {
            document.getElementById('documentName').value = document.getElementById('title-header').innerHTML.trim();
        }

        if(evt.key == 'Enter') {
            document.getElementById("document-form").submit();
        }
    });

    const updateSubmits = [...document.getElementsByClassName('update-note-submit')];

    updateSubmits.forEach(elem => {
        elem.addEventListener('click', evt => {
            let count = elem.id.split('-')[1];
            document.getElementById('update-docContent-' + count).value = contentDiv.innerHTML;
            document.getElementById('update-note-form-' + count).submit();
        })
    });

    document.getElementById('create-note-submit').addEventListener('click', evt => {
        document.getElementById('create-docContent').value = contentDiv.innerHTML;
        document.getElementById('create-note-form').submit();
    });
</script>