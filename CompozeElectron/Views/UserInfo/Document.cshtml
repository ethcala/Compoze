@using CompozeData.Models
@{
    Document document = ViewBag.ThisDocument;
    ProjectListViewModel model = ViewBag.ProjectListModel;
    ViewData["Title"] = document.DocumentName;
}

<div class="background-l-grey stack-sm row mt-2 stack-sm">
    <div class="col-7 pt-1 border-round background-lighter dashboard-box">
        <a class="m-auto ml-3 mt-1" href="/UserInfo/Project/@document.ProjectId">Back to Project</a>
        <h2 contenteditable="true" class="center-x" id="title-header">@ViewData["Title"]</h2>
        <div class="p-0 stack">
            <form id="document-form" class="w-100 m-0 border-none p-0" asp-controller="UserInfo" asp-action="EditDocument" method="post">
                <div class="stack">
                    <input type="hidden" value="@document.DocumentId" name="documentId"/>
                    <input type="hidden" value="@document.ProjectId" name="projectId"/>
                    <input type="hidden" value="@document.DocumentName" name="documentName" id="documentName"/>
                    <input type="hidden" value="@document.DocumentContent" name="documentContent" id="documentContent"/>
                    <input type="hidden" value="@document.DocumentCategory" name="documentCategory"/>
                    <div contenteditable="true" class="txt-font-basic text-editor" id="text-editor">@document.DocumentContent</div>
                </div>
                <input type="submit" value="Save" class="mt-2 mb-1" />
            </form>
            <div class="button-red px-2 mx-5" onclick="openModal('del-modal')">Delete</div>
            <p>@ViewBag.EditedMessage</p>
            <p>Characters: @document.DocumentContent.Length</p>
            <p>Words: @document.DocumentContent.Split(" ").Length</p>
        </div>
    </div>
    <div class="stack col-5">
        <h2>Notes</h2>
        <div class="border-round background-lighter center-x w-90 p-1 pr-2 h-auto">
            <form class="no-form-style w-90 m-1 h-150" asp-controller="UserInfo" asp-action="CreateNote" method="post">
                <input type="hidden" value="@document.DocumentId" name="documentId" />
                <input type="textarea" class="border-none mb-1 mh-20 background-l-grey" name="newNote" />
                <input type="submit" class="fancybutton h-40" value="+ New Note" />
            </form>
        </div>
        @foreach(String note in document.DocumentNotes)
        {
        <div class="border-round background-lighter center-x w-90 p-1 pr-2 h-auto">
            <form class="no-form-style w-90 m-1 h-150" asp-controller="UserInfo" asp-action="UpdateNote" method="post">
                <input type="hidden" value="@document.DocumentId" name="documentId" />
                <input type="hidden" name="originalNote" value="@note" />
                <input type="textarea" class="border-none mb-1 mh-20 background-l-grey" value="@note" name="updatedNote" />
                <input type="submit" class="fancybutton h-40" value="Update Note" />
            </form>
        </div>
        }
    </div>
</div>

<div id="del-modal" class="modal m-middle">
    <div class="modal-content">
        <span class="x-button close" onclick="closeModal('del-modal')">X</span>
        <h3 class="border-bottom">Delete</h3>
        <p>Are you sure you want to delete this document?</p>
        <div class="row">
            <form class="border-none no-form-style" asp-controller="UserInfo" asp-action="DeleteDocument" method="post">
                <input type="hidden" value="@document.DocumentId" name="docId"/>
                <input type="submit" value="Yes" />
            </form>
            <button class="fancybutton" onclick="closeModal('del-modal')">Cancel</button>
        </div>
    </div>
</div>

<div id="search" class="modal noblackout">
    <div class="modal-content">
        <span class="close button-x" id="close-search">X</span>
        <div class="row">
            <label for="search-input">Search: </label>
            <input type="text" id="search-input" />
        </div>
    </div>
</div>

<script>
    let keysPressed = {};

    let contentDiv = document.getElementById('text-editor');
    let originalContent = contentDiv.innerHTML;

    document.getElementById('close-search').addEventListener('click', (evt) => {
        contentDiv.innerHTML = originalContent;
        document.getElementById('search').style.display = 'none';
    });

    window.onclick = function(event) {
        if (event.target.id == 'search') {
            event.target.style.display = 'none';
            contentDiv.innerHTML = originalContent; 
        }
    }

    document.addEventListener('keydown', (event) => {
        keysPressed[event.key] = true;

        if (keysPressed['Control'] && event.key == 's') {
            document.getElementById("document-form").submit();
            keysPressed['Control'] = false;
        }

        if (keysPressed['Control'] && event.key == 'f') {
            originalContent = contentDiv.innerHTML;
            document.getElementById('search').style.display = 'block';
            keysPressed['Control'] = false;
        }
    });

    document.addEventListener('keyup', (event) => {
        keysPressed[event.key] = false;
    });

    document.getElementById('search-input').addEventListener('input', (evt) => {
        const reg = new RegExp(document.getElementById('search-input').value, 'g');
        console.log(reg);
        contentDiv.innerHTML = originalContent.replace(reg, `<span class="highlight">${document.getElementById('search-input').value}</span>`);
    });

    contentDiv.addEventListener('input', (evt) => {
        document.getElementById('documentContent').value = contentDiv.innerHTML;
    });

    document.getElementById('title-header').addEventListener('keyup', (evt) => {
        if (evt.key != 'Tab' && evt.key != 'Enter') {
            document.getElementById('documentName').value = document.getElementById('title-header').innerHTML.trim();
        }

        if(evt.key == 'Enter') {
            document.getElementById("document-form").submit();
        }
    });
</script>